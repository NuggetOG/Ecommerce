// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id Int @id @default(autoincrement())
  email String @unique
  hashedPassword String
  firstName String
  lastName String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
  Wishlist Wishlist []
  Cart Cart[]
  Interactions Interactions[]
}

model Product {
  id          Int      @id @default(autoincrement())
  productName String
  price       Float
  imgUrl      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt 
  category    String
  sizes       Size[]  // relation
  Wishlist Wishlist[]
  Cart Cart[]
  Interactions Interactions[] 
}

model Size {
  id         Int     @id @default(autoincrement())
  sizeName   String  // 'S', 'M', 'L', etc
  quantity   Int     // stock count
  productId  Int
  product    Product @relation(fields: [productId], references: [id])
  cart Cart[]
}

model Wishlist {
  id        Int     @id @default(autoincrement())
  userId    Int
  productId Int
  user      User    @relation(fields: [userId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model Cart {
  id        Int     @id @default(autoincrement())
  userId    Int
  productId Int
  quantity  Int
  sizeId    Int 
  user      User    @relation(fields: [userId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
  size      Size    @relation(fields: [sizeId], references: [id])
}

model Interactions {
  id Int @id @default(autoincrement())
  userId Int
  productId Int
  type String // e.g., view, click, add_to_cart
  createdAt DateTime @default(now())
  user User @relation(fields:[userId], references: [id])
  product Product @relation(fields:[productId], references: [id])
}
